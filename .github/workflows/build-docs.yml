---
# yamllint disable rule:line-length
name: Convert README.md to HTML
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    paths:
      - README.md
  release:
    types:
      - published
permissions:
  contents: read
jobs:
  build_docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout the docs repository
        uses: actions/checkout@v3
        with:
          ref: docs

      - name: Fetch README.md from the workflow repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: README.md
          sparse-checkout-cone-mode: false
          path: ref_branch

      - name: Set env variable with release version
        run: |
          set -euxo pipefail
          if [ -n "${{ github.event.release.tag_name }}" ]; then
            echo "RELEASE_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "RELEASE_VERSION=latest" >> $GITHUB_ENV
          fi

      - name: Ensure that the version directory exists
        run: mkdir -p ${{ env.RELEASE_VERSION }}

      - name: Convert README.md to HTML and save to the version directory
        uses: docker://pandoc/core:latest
        with:
          args: >-
            --from gfm --to html5 --toc --shift-heading-level-by=-1
            --template https://raw.githubusercontent.com/linux-system-roles/auto-maintenance/47745a818c7c404bd5eb1ba6efb31e1b29c6bef2/GitHub.html5
            --output ${{ env.RELEASE_VERSION }}/README.html ref_branch/README.md

      - name: Logging
        run: |
          echo "${{toJSON(github)}}"

      - name: Commit and push changes
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add ${{ env.RELEASE_VERSION }}/README.html
          git commit -m "Update README.html: ${{ github.event_name }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: docs

