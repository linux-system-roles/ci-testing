# SPDX-License-Identifier: MIT
---
# Put the tasks for your role here.

# An example of how to set distribution and version specific internal variables
# (defined in vars/ directory):
- name: Set version specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

# Examples of some tasks:

- name: Deploy the GPG key for Microsoft repositories
  rpm_key:
    key: https://packages.microsoft.com/keys/microsoft.asc
    state: present

- name: Configure the RHEL 8 Microsoft SQL Server 2019 repository
  yum_repository:
    name: packages-microsoft-com-mssql-server-2019
    description: Microsoft SQL Server 2019
    baseurl: https://packages.microsoft.com/rhel/8/mssql-server-2019/
    gpgcheck: true

- name: Print time before the first package download
  command: date +"%Y-%m-%d %H:%M:%S"
  register: __time1
  changed_when: false

- name: Download the mssql_server package via the proxy
  package:
    name: mssql-server
    state: present
    download_only: true

- name: Print time after the first package download
  command: date +"%Y-%m-%d %H:%M:%S"
  register: __time2
  changed_when: false

- name: Clean packages cache
  command: yum clean packages

- name: Register dnf.conf
  stat:
    path: /etc/dnf/dnf.conf
  register: dnf_conf

- name: Print dnf.conf or yum.conf
  command: >-
    cat {{ '/etc/dnf/dnf.conf' if dnf_conf.stat.exists else '/etc/yum.conf' }}
  changed_when: false

- name: Remove proxy from dnf.conf or yum.conf
  lineinfile:
    path: >-
      {{ '/etc/dnf/dnf.conf' if dnf_conf.stat.exists else
      '/etc/yum.conf' }}
    regexp: "{{ item }}"
    state: absent
  loop:
    - ^proxy
    - ^sslverify

- name: Print dnf.conf or yum.conf
  command: >-
    cat {{ '/etc/dnf/dnf.conf' if dnf_conf.stat.exists else '/etc/yum.conf' }}
  changed_when: false

- name: Print time before the second package download
  command: date +"%Y-%m-%d %H:%M:%S"
  register: __time3
  changed_when: false

- name: Download the mssql_server package without the proxy
  package:
    name: mssql-server
    state: present
    download_only: true

- name: Print time after the second package download
  command: date +"%Y-%m-%d %H:%M:%S"
  register: __time4
  changed_when: false

- name: Print results
  vars:
    __time_proxy: >-
      {{ __time2.stdout | to_datetime - __time1.stdout | to_datetime }}
    __time_no_proxy: >-
      {{ __time4.stdout | to_datetime - __time3.stdout | to_datetime }}
  debug:
    msg:
      - Downloading via the proxy takes     {{ __time_proxy }}
      - Downloading without the proxy takes {{ __time_no_proxy }}
      - >-
        Proxy saves
        {{ __time_no_proxy  | to_datetime('%H:%M:%S') -
        __time_proxy | to_datetime('%H:%M:%S') }}
